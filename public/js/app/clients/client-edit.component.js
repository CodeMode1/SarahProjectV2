"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var client_service_1 = require('./client.service');
var forms_1 = require('@angular/forms');
var client_1 = require('./client');
var erreur_service_1 = require('../erreurs/erreur.service');
var EditClientComponent = (function () {
    function EditClientComponent(_formBuilder, _clientService, _erreurService) {
        this._formBuilder = _formBuilder;
        this._clientService = _clientService;
        this._erreurService = _erreurService;
        this.identification = "Identification";
        this.gestion = "Gestion";
        this.myClient = new client_1.Client();
        this.formActualiser = false;
        this.formCopie = false;
        this.modeSoumission = true;
        this.sauvegardeClient = false;
    }
    EditClientComponent.prototype.ngOnInit = function () {
        this.editClientForm = this._formBuilder.group({
            noClient: [''],
            prenom: [''],
            nom: ['', forms_1.Validators.required],
            noCompte: [''],
            courriel: ['', this.estCourrielOK],
            cell: [''],
            compagnie: [''],
            adresse: [''],
            ville: [''],
            codePostal: ['', this.estCodePostalOK],
            telPrincipal: ['', this.estTelephoneOK],
            province: [''],
            pays: [''],
            fax: [''],
            telSecondaire: [''],
            memo: [''],
            memoAVenir: [''],
            noExTaxeProv: [''],
            noExTaxeFed: [''],
            selectStatut: [''],
            selectSource: [''],
            modifPar: [''],
            modif: [''],
            dateDernEv: [''],
            creePar: [''],
            cree: ['']
        });
        //this.testCP();
    };
    EditClientComponent.prototype.formatCP = function (input) {
        //j'enleve les espaces, globalement.
        var chaine = input.value.replace(/\s+/g, "");
        //pour ajouter l'espace au 3eme carac.
        if (chaine.length > 3) {
            //je place l'espace à la bonne place.
            chaine = chaine.substr(0, 3) + " " + chaine.substr(3, 3);
        }
        //transformer le code Postal en majuscule.
        input.value = chaine.toUpperCase();
    };
    EditClientComponent.prototype.formatTP = function (input) {
        // j'enleve tout ce qui n'est pas chiffre, globalement.
        var chaine = input.value.replace(/[^0-9]/g, "");
        console.log(chaine);
        //au 11eme carac tapé, je reconstruis le tel avec ses bons chiffres.
        if (chaine.length > 10) {
            chaine = chaine.substr(1, 3) + chaine.substr(5, 3) + chaine.substr(9, 4);
        }
        //au 10eme carac, je formatte selon (XXX)XXX-XXXX.
        if (chaine.length === 10) {
            chaine = "(" + chaine.substr(0, 3) + ")" + chaine.substr(3, 3) + "-" + chaine.substr(6, 4);
        }
        /* si ces if sont inversés, chaine non-formattée.
           car au 10eme carac :
           chaine.length > 10 et donc la chaine revient non-formattée.
        */
        input.value = chaine;
    };
    EditClientComponent.prototype.estCodePostalOK = function (control) {
        //validation a réussi: pas de valeur tapée
        if (!control.value) {
            return null;
        }
        /*format regex canadien :
            ^ : chaine commence, $ : fin séquence
            lettre : pas de D, F, I, O, Q U
            1er lettre: pas de W, Z, chiffre: \d, lettre, blanc, chiffre, lettre, chiffre
        */
        var regexCP = /^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJKLMNPRSTVWXYZ][ ]\d[ABCEGHJKLMNPRSTVWXYZ]\d$/;
        if (!control.value.match(regexCP)) {
            return { codePostalInvalide: true };
        }
        //validation résussie
        return null;
    };
    EditClientComponent.prototype.estTelephoneOK = function (control) {
        if (!control.value) {
            return null;
        }
        /* format regex canadien:
           ^ : sequence commence, $ : fin sequence
           ( , chiffre(x3), ) , chiffre (x3), - , chiffre (x4)
        */
        var regexTP = /^\u0028\d{3}\u0029\d{3}\u002D\d{4}$/;
        if (!control.value.match(regexTP)) {
            return { telephoneInvalide: true };
        }
        //validation réussie
        return null;
    };
    //validation: retourne null si valide et un boolean si erreur.
    EditClientComponent.prototype.estCourrielOK = function (control) {
        if (control.value) {
            var regexCourriel = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;
            if (!control.value.match(regexCourriel))
                return { courrielInvalide: true };
        }
        //validation réussie
        return null;
    };
    EditClientComponent.prototype.onSubmit = function () {
        var _this = this;
        //change mode modification, enable bouton Acutaliser et Copier.
        this.modeSoumission = false;
        this.formActualiser = true;
        this.formCopie = true;
        console.log(this.editClientForm.value);
        console.log('creer Client: ' + this.myClient.prenom + " " + this.myClient.nom + " " + this.myClient.courriel);
        this._clientService.creerClient(this.myClient)
            .subscribe(function (data) {
            console.log('data du serveur :');
            console.log(data);
            _this.myClient = data;
            //sauver le _id qui revient dans le client créé par Mongo.
            _this.clientId = data.clientId;
            console.log("id de " + data.nom + " : " + _this.clientId);
            console.log("no de client : " + data.noClient);
            _this.myClient.noClient = data.noClient;
            _this.sauvegardeClient = true;
        }, function (error) { return _this._erreurService.handleErreur(error); });
    };
    EditClientComponent.prototype.testCP = function () {
        //retoune null (valide)
        //console.log(this.estCodePostalOK('H2S 0B5')); //ok
        //console.log(this.estCodePostalOK('h2s 0b5')); //ok
        //console.log(this.estCodePostalOK('h2s0b5'));  //ok
        //retourne true (fail)
        //console.log(this.estCodePostalOK('Z3V H2S')); //Ok
        //console.log(this.estCodePostalOK('z3vh2s'));  //ok
        //console.log(this.estCodePostalOK('B3V H2'));  //ok
    };
    EditClientComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'my-edit-client',
            template: "\n    <div class=\"alert alert-success col-md-12\" role=\"alert\" *ngIf=\"this.sauvegardeClient\">\n        <p>Client Sauvegard\u00E9: {{this.myClient.prenom}} {{this.myClient.nom}}</p>\n    </div>\n    <section class=\"col-md-12 space\">\n        <form [formGroup]=\"editClientForm\" (ngSubmit)=\"onSubmit()\">\n        <section class=\"col-md-6\">\n                <div class=\"col-md-12 title\">\n                    <h2>{{identification}}</h2>\n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"noClient\">No Client</label>\n                        <input type=\"text\" id=\"noClient\" class=\"form-control\" formControlName=\"noClient\" placeholder=\"client #\" [(ngModel)]=\"this.myClient.noClient\" readonly>\n                    </div>\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"noCompte\">No Compte</label>\n                        <input type=\"text\" id=\"noCompte\" class=\"form-control\" formControlName=\"noCompte\" placeholder=\"account #\" [(ngModel)]=\"this.myClient.noCompte\">\n                    </div>\n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"prenom\">Pr\u00E9nom</label>\n                        <input type=\"text\" id=\"prenom\" class=\"form-control\" formControlName=\"prenom\" placeholder=\"firstname\" [(ngModel)]=\"this.myClient.prenom\">\n                    </div>\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"nom\">Nom</label>\n                        <input type=\"text\" id=\"nom\" class=\"form-control\" formControlName=\"nom\" placeholder=\"name\" [(ngModel)]=\"this.myClient.nom\">\n                    </div>\n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"telPrincipal\">T\u00E9l. Principal</label>\n                        <input type=\"text\" #inputTP (input)=\"formatTP(inputTP)\" id=\"telPrincipal\" class=\"form-control\" formControlName=\"telPrincipal\" placeholder=\"main #\" [(ngModel)]=\"this.myClient.telPrincipal\">\n                        <p class=\"text-danger\" [hidden]=\"editClientForm.controls.telPrincipal.valid || (editClientForm.controls.telPrincipal.pristine)\">\n                            Invalide. T\u00E9l \u00E0 10 chiffres. Example: (514)123-4567.\n                        </p>\n                    </div>\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"telSecondaire\">T\u00E9l. Secondaire</label>\n                        <input type=\"text\" id=\"telSecondaire\" class=\"form-control\" formControlName=\"telSecondaire\" placeholder=\"second #\" [(ngModel)]=\"this.myClient.telSecondaire\">\n                    </div>\n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"cell\">Cellulaire</label>\n                        <input type=\"text\" id=\"cell\" class=\"form-control\" formControlName=\"cell\" placeholder=\"cell #\" [(ngModel)]=\"this.myClient.cell\">\n                    </div>\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"courriel\">Courriel</label>\n                        <input type=\"email\" id=\"courriel\" class=\"form-control\" placeholder=\"my@email.com\" formControlName=\"courriel\" [(ngModel)]=\"this.myClient.courriel\">\n                    </div>\n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"fax\">Fax</label>\n                        <input type=\"text\" id=\"fax\" class=\"form-control\" formControlName=\"fax\" placeholder=\"fax #\" [(ngModel)]=\"this.myClient.fax\">\n                    </div>\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"compagnie\">Compagnie</label>\n                        <input type=\"text\" id=\"compagnie\" class=\"form-control\" formControlName=\"compagnie\" placeholder=\"business\" [(ngModel)]=\"this.myClient.compagnie\">\n                    </div>\n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-12 form-group\">\n                        <label for=\"adresse\">Adresse</label>\n                        <input type=\"text\" id=\"adresse\" class=\"form-control\" formControlName=\"adresse\" placeholder=\"adress\" [(ngModel)]=\"this.myClient.adresse\">\n                    </div>     \n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"ville\">Ville</label>\n                        <input type=\"text\" id=\"ville\" class=\"form-control\" formControlName=\"ville\" placeholder=\"city\" [(ngModel)]=\"this.myClient.ville\">\n                    </div>\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"province\">Province</label>\n                        <input type=\"text\" id=\"province\" class=\"form-control\" formControlName=\"province\" placeholder=\"province\" [(ngModel)]=\"this.myClient.province\">\n                    </div>\n                </div>\n                <div class=\"col-md-12 outer\">\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"codePostal\">Code Postal</label>\n                        <input type=\"text\" #inputCP (input)=\"formatCP(inputCP)\" id=\"codePostal\" class=\"form-control\" formControlName=\"codePostal\" placeholder=\"postal code\" [(ngModel)]=\"this.myClient.codePostal\">\n                        <p class=\"text-danger\" [hidden]=\"editClientForm.controls.codePostal.valid || (editClientForm.controls.codePostal.pristine)\">\n                            Invalide. D, F, I, O, Q, U, W, Z Invalide. Example: H2S 0B5.\n                        </p>\n                    </div>\n                    <div class=\"col-md-6 form-group\">\n                        <label for=\"pays\">Pays</label>\n                        <input type=\"text\" id=\"pays\" class=\"form-control\" formControlName=\"pays\" placeholder=\"country\" [(ngModel)]=\"this.myClient.pays\">\n                    </div>    \n                </div>            \n            </section>\n            <section class=\"col-md-2\">\n            </section>\n            <section class=\"col-md-4\">\n                <div class=\"col-md-12 title\">\n                    <h2>{{gestion}}</h2>\n                </div>\n                <div class=\"col-md-6 outer\">\n                    <div class=\"col-md-12 memo\">\n                        <label for=\"labelMemo\">M\u00E9mo</label>\n                        <textarea id=\"labelMemo\" class=\"form-control\" rows=\"10\" formControlName=\"memo\" [(ngModel)]=\"this.myClient.memo\"></textarea>\n                    </div>\n                    <div class=\"col-md-12 memo\">\n                        <label for=\"labelMess\">Message important pour \u00E9v\u00E8nement \u00E0 venir</label>\n                        <textarea id=\"labelMess\" class=\"form-control\" rows=\"10\" formControlName=\"memoAVenir\" [(ngModel)]=\"this.myClient.memoAVenir\"></textarea>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"noExTaxeProv\">No exemption taxe provinciale</label>\n                        <input type=\"text\" id=\"noExTaxeProv\" class=\"form-control\" formControlName=\"noExTaxeProv\" [(ngModel)]=\"this.myClient.noExTaxeProv\">\n                    </div>\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"noExTaxeFed\">No exemption taxe f\u00E9d\u00E9rale</label>\n                        <input type=\"text\" id=\"noExTaxeFed\" class=\"form-control\" formControlName=\"noExTaxeFed\" [(ngModel)]=\"this.myClient.noExTaxeFed\">\n                    </div>\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"selectStatut\">Satut du client</label>\n                        <select class=\"form-control\" id=\"selectStatut\" formControlName=\"selectStatut\" [(ngModel)]=\"this.myClient.selectStatut\">\n                            <option>Client pass\u00E9</option>\n                            <option>Client actuel</option>\n                            <option>Client r\u00E9current</option>\n                            <option>Client \u00E0 solliciter</option>\n                            <option>Client sollicit\u00E9</option>\n                            <option>Client VIP</option>\n                        </select>\n                    </div>\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"selectSource\">Source</label>\n                        <select class=\"form-control\" id=\"selectSource\" formControlName=\"selectSource\" [(ngModel)]=\"this.myClient.selectSource\">\n                            <option>Internet</option>\n                            <option>Bouche-\u00E0-oreille</option>\n                            <option>Journaux et Magazines</option>\n                            <option>T\u00E9l\u00E9vision</option>\n                            <option>Travail</option>\n                            <option>Autres</option>\n                        </select>\n                    </div>     \n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"modifPar\">Modifi\u00E9 par</label>\n                        <input type=\"text\" id=\"modifPar\" class=\"form-control\" formControlName=\"modifPar\" readonly [(ngModel)]=\"this.myClient.modifPar\">\n                    </div>\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"modif\">Modifi\u00E9</label>\n                        <input type=\"text\" id=\"modif\" class=\"form-control\" formControlName=\"modif\" readonly [(ngModel)]=\"this.myClient.modif\">\n                    </div>\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"dateDernEv\">Date Dernier \u00C9v\u00E8nement</label>\n                        <input type=\"text\" id=\"dateDernEv\" class=\"form-control\" formControlName=\"dateDernEv\" readonly [(ngModel)]=\"this.myClient.dateDernEv\">\n                    </div>\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"creePar\">Cr\u00E9\u00E9 par</label>\n                        <input type=\"text\" id=\"creePar\" class=\"form-control\" formControlName=\"creePar\" readonly [(ngModel)]=\"this.myClient.creerPar\">\n                    </div>\n                    <div class=\"col-md-12 gestionInputs\">\n                        <label for=\"cree\">Cr\u00E9\u00E9</label>\n                        <input type=\"text\" id=\"cree\" #dateCree class=\"form-control\" formControlName=\"cree\" readonly [(ngModel)]=\"this.myClient.dateCree\">\n                    </div>\n                </div>\n            </section>\n            <div class=\"col-md-12 footer space\">\n                <div class=\"col-md-4 divFooter\">\n                    <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!formActualiser\">\n                        <span class=\"glyphicon glyphicon-refresh\" aria-hidden=\"true\"></span>\n                        Actualiser\n                    </button>\n                </div>\n                <div class=\"col-md-4 divFooter\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editClientForm.valid || !modeSoumission\">\n                        <span class=\"glyphicon glyphicon-floppy-disk\" aria-hidden=\"true\"></span>\n                        Enregistrer\n                    </button>\n                </div>\n                <div class=\"col-md-4 divFooter\">\n                    <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!formCopie\">\n                        <span class=\"glyphicon glyphicon-print\" aria-hidden=\"true\"></span>\n                        Copie Client\n                    </button>\n                </div>\n            </div>\n        </form>\n    </section>\n    \n\n    ",
            styles: ["\n        .outer{\n            float:left;\n            clear:both;\n            padding: 0 0 1% 0;\n        }\n        \n        .form-group{\n            float:left;\n        }\n\n        .divFooter{\n            text-align:center;\n        }\n\n        .footer{\n            border-top: 2px solid black;\n        }\n\n        button{  \n            display:block;\n            margin: 0 auto;\n        }\n\n        .space {\n            padding: 2%;\n        }\n\n        h2{\n            padding-top:1%;\n            padding-bottom:2%;\n        }\n\n        .title{\n            text-align:left;\n        }\n\n        .memo{\n            float: left;\n            clear: both;\n            padding: 0 0 2% 0;\n        }\n\n        textarea{\n            resize: none;\n        }\n\n        .gestionInputs{\n            float: left;\n            clear: both;\n        }\n\n        .dropdown{\n            padding:0;\n        }\n        .alert-success{\n            text-align:center;\n        }\n    "
            ]
        }), 
        __metadata('design:paramtypes', [forms_1.FormBuilder, client_service_1.ClientService, erreur_service_1.ErreurService])
    ], EditClientComponent);
    return EditClientComponent;
}());
exports.EditClientComponent = EditClientComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
